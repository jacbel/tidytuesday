[["index.html", "Tidy Tuesday Contributions 1 Intro 1.1 Installing bookdown 1.2 Set up", " Tidy Tuesday Contributions Jacob Bellmund 1 Intro This page serves as documentation for Jacob Bellmund’s contributions to the Tidy Tuesday project. I will contribute as often as I can, but probably won’t be able to make it every week. If you download the Github Repo, you should be able to run my code to reproduce or improve my contributions. If you have suggestions for improvements or any feedback, feel free to get in touch! 1.1 Installing bookdown If you don’t have the bookdown package installed, this should be the first thing you do. To install it, run from the R console: if(!require(&quot;bookdown&quot;)){install.packages(&quot;bookdown&quot;)} library(bookdown) 1.2 Set up # create folder for figure output if necessary using the here package if(!require(&quot;here&quot;)){install.packages(&quot;here&quot;)} ## Loading required package: here ## here() starts at /Users/bellmund/ownCloud/projects/tidytuesday library(patchwork) if (!dir.exists(here(&quot;figures&quot;))){dir.create(here(&quot;figures&quot;))} "],["week-1.html", "2 Week 1 2.1 Data 2.2 Data wrangling 2.3 Home field advantage", " 2 Week 1 The instructions for Week 1 of 2022 are short: &gt;This was really just a bring your own dataset week. 2.1 Data Let’s look at some football (soccer) data from main European leagues. I use the data as distributed in the engsoccerdata package. First load the package after installing it if needed. if(!require(&quot;tidyverse&quot;)){install.packages(&quot;tidyverse&quot;)} ## Loading required package: tidyverse ## ── Attaching packages ────────────────────────────────────────────────────────────────────────────── tidyverse 1.3.1 ── ## ✓ ggplot2 3.3.5 ✓ purrr 0.3.4 ## ✓ tibble 3.1.6 ✓ dplyr 1.0.7 ## ✓ tidyr 1.1.4 ✓ stringr 1.4.0 ## ✓ readr 2.1.1 ✓ forcats 0.5.1 ## ── Conflicts ───────────────────────────────────────────────────────────────────────────────── tidyverse_conflicts() ── ## x dplyr::filter() masks stats::filter() ## x dplyr::lag() masks stats::lag() library(tidyverse) if(!require(&quot;devtools&quot;)){install.packages(&quot;devtools&quot;)} ## Loading required package: devtools ## Loading required package: usethis library(devtools) if(!require(&quot;engsoccerdata&quot;)){install_github(&quot;jalapic/engsoccerdata&quot;)} ## Loading required package: engsoccerdata library(engsoccerdata) if(!require(&quot;patchwork&quot;)){install.packages(&quot;patchwork&quot;)} library(patchwork) Load data from England, France, Germany, Italy and Spain. # load data df_eng &lt;- engsoccerdata::england df_fra &lt;- engsoccerdata::france df_ger &lt;- engsoccerdata::germany df_ita &lt;- engsoccerdata::italy df_esp &lt;- engsoccerdata::spain 2.2 Data wrangling We want to add all data to one data frame. Some columns are missing, so let’s quickly compute them. # Germany is missing the columns for total goals, goal difference and result # Let&#39;s create these df_ger &lt;- df_ger %&gt;% mutate(totgoal = hgoal + vgoal, goaldif = hgoal + vgoal, result = case_when(hgoal &gt; vgoal ~ &quot;H&quot;, vgoal &gt; hgoal ~ &quot;A&quot;, hgoal == vgoal ~ &quot;D&quot;), country = &quot;Germany&quot;) df_ita &lt;- df_ita %&gt;% mutate(division = 1, totgoal = hgoal + vgoal, goaldif = hgoal + vgoal, result = case_when(hgoal &gt; vgoal ~ &quot;H&quot;, vgoal &gt; hgoal ~ &quot;A&quot;, hgoal == vgoal ~ &quot;D&quot;), country = &quot;Italy&quot;) df_esp &lt;- df_esp %&gt;% filter(round == &quot;league&quot;) %&gt;% select(-round, -group, -notes, -HT) %&gt;% mutate(division = 1, totgoal = hgoal + vgoal, goaldif = hgoal + vgoal, result = case_when(hgoal &gt; vgoal ~ &quot;H&quot;, vgoal &gt; hgoal ~ &quot;A&quot;, hgoal == vgoal ~ &quot;D&quot;), country = &quot;Spain&quot;) df_eng &lt;- df_eng %&gt;% mutate(country = &quot;England&quot;) df_fra &lt;- df_fra %&gt;% mutate(country = &quot;France&quot;, result = case_when(hgoal &gt; vgoal ~ &quot;H&quot;, vgoal &gt; hgoal ~ &quot;A&quot;, hgoal == vgoal ~ &quot;D&quot;) ) # build common data frame df &lt;- rbind(df_eng, df_ger, df_esp, df_ita, df_fra) 2.3 Home field advantage 2.3.1 All leagues First, let’s compute the proportions of home wins, away wins and draws irrespective of country (i.e. league). # result proportions by country df_win &lt;- df %&gt;% group_by(Season) %&gt;% summarise(home_win = sum(result == &quot;H&quot;)/n(), away_win = sum(result == &quot;A&quot;)/n(), draw = sum(result == &quot;D&quot;)/n(), .groups = &quot;drop&quot;) %&gt;% pivot_longer(cols = c(home_win, away_win, draw), names_to = &quot;result&quot;) # df for labelling df_label = df_win %&gt;% filter(Season == max(Season)) %&gt;% mutate(label = case_when(result == &quot;home_win&quot;~&quot;Home Win&quot;, result == &quot;away_win&quot;~&quot;Away Win&quot;, result == &quot;draw&quot;~&quot;Draw&quot;) ) Visualize percentages of home vs. away wins over time as a line graph. # plot as line graph p1 &lt;- ggplot(df_win %&gt;% filter(Season &gt; 1960, result != &quot;draw&quot;), aes(x = Season, y = value, group = result, color = result)) + geom_line() + geom_text(data = df_label %&gt;% filter(result != &quot;draw&quot;), aes(x = Season, y = value, label = label), hjust = -0.2, alpha = 1, fontface = &quot;bold&quot;) + xlim(c(1960, 2035)) + scale_color_manual(values = c(&quot;#ef8a62&quot;, &quot;#67a9cf&quot;)) + scale_y_continuous(labels = scales::percent_format(accuracy = 1)) + ylab(element_blank()) + ggtitle(&quot;The decline of the home field advantage in top-tier European soccer&quot;) + annotate(geom = &quot;text&quot;, label = &quot;across 5 major European leagues&quot;, x=Inf, y=Inf, hjust = 1, vjust = 1, size = 11/.pt, face = &quot;bold&quot;) + theme_minimal() + theme(legend.position = &quot;none&quot;, text = element_text(size=10), plot.title = element_text(size = 14, face = &quot;bold&quot;, hjust = 0.5), axis.text = element_text(size=10)) ## Warning: Ignoring unknown parameters: face p1 2.3.2 Leagues separately Second, we repeat the above steps, but separately for each country. # result proportions by country df_win_country &lt;- df %&gt;% group_by(country, Season) %&gt;% summarise(home_win = sum(result == &quot;H&quot;)/n(), away_win = sum(result == &quot;A&quot;)/n(), draw = sum(result == &quot;D&quot;)/n(), .groups = &quot;drop&quot;) %&gt;% pivot_longer(cols = c(home_win, away_win, draw), names_to = &quot;result&quot;) # df for labelling df_label = df_win_country %&gt;% group_by(country) %&gt;% filter(Season == max(Season)) %&gt;% mutate(label = case_when(result == &quot;home_win&quot;~&quot;Home Win&quot;, result == &quot;away_win&quot;~&quot;Away Win&quot;, result == &quot;draw&quot;~&quot;Draw&quot;) ) Make a line plot with one facet per country # plot as line graph with one facet per country p2 &lt;- ggplot(df_win_country %&gt;% filter(Season &gt; 1960, result != &quot;draw&quot;), aes(x = Season, y = value, group = result, color = result)) + geom_line() + #geom_text(data = df_label %&gt;% filter(result != &quot;draw&quot;), # aes(x = Season, y = value, label = label), # hjust = -0.2, alpha = 1, fontface = &quot;bold&quot;) + #xlim(c(1960, 2026)) + scale_color_manual(values = c(&quot;#ef8a62&quot;, &quot;#67a9cf&quot;)) + scale_x_continuous(breaks = seq(1970, 2010, 20), minor_breaks = seq(1960, 2020, 20)) + scale_y_continuous(labels = scales::percent_format(accuracy = 1)) + ylab(element_blank()) + facet_wrap(~country, nrow = 1) + labs(caption = &quot;Visualization by Jacob Bellmund, licensed under CC BY 4.0.\\nData based on: James P. Curley (2016). engsoccerdata: English Soccer Data 1871-2016. v. 0.1.7&quot;)+ theme_minimal() + theme(legend.position = &quot;none&quot;, text = element_text(size=10), axis.text = element_text(size=10), strip.text = element_text(size = 11), plot.caption = element_text(size=6)) p2 2.3.3 Visualization dsgn &lt;- &quot; ABBBC DDDDD &quot; p &lt;- plot_spacer() + p1 + plot_spacer() + p2 + plot_layout(design = dsgn, guides = &quot;keep&quot;) p ggsave(filename = here(&quot;figures&quot;, &quot;bellmund_tidytuesday_2022_wk1.png&quot;), plot = p, width = 10, height = 6) Here is the final visualization with the correct aspect ratio: "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
